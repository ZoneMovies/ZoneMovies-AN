apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.mac.zonemovies"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //Support libraries
    implementation "com.android.support:appcompat-v7:${rootProject.ext.sdkToolsVersion}"
    implementation "com.android.support:design:${rootProject.ext.sdkToolsVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.ext.sdkToolsVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.ext.sdkToolsVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.constraintVersion}"
    //Testing
    testImplementation "junit:junit:${rootProject.ext.jUnitVersion}"
    testImplementation "org.mockito:mockito-core:${rootProject.ext.mockitoVersion}"
    testImplementation "org.powermock:powermock-core:${rootProject.ext.powerMockVersion}"
    testImplementation "org.powermock:powermock-module-junit4:${rootProject.ext.powerMockVersion}"
    testImplementation "org.powermock:powermock-api-mockito2:${rootProject.ext.powerMockVersion}"
    //Instrumented testing
    androidTestImplementation "com.android.support.test:runner:${rootProject.ext.androidTestRunnerVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.ext.androidEspressoVersion}"
    // Networking
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-moshi:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.okhttp3:okhttp:${rootProject.ext.okHttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okHttpVersion}"
    // Network Images
    implementation "com.squareup.picasso:picasso:${rootProject.ext.picassoVersion}"
    // Dagger 2
    implementation "com.google.dagger:dagger:${rootProject.ext.dagger2Version}"
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.dagger2Version}"
    // RX
    implementation "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxJava2Version}"
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxAndroidVersion}"
    // Memory
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${rootProject.ext.leakCanaryVersion}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.ext.leakCanaryVersion}"
    // Optional, if you use support library fragments:
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:${rootProject.ext.leakCanaryVersion}"
    // Logging
    implementation "com.jakewharton.timber:timber:${rootProject.ext.timberVersion}"

}
